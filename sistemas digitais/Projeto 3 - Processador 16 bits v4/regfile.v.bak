module regfile(
    input clk,	
	 input rst,
	 input we_reg,
	 input [3:0] opcode,
	 input [3:0] addr_reg,
	 input [7:0] data_reg,
	 output [7:0] reg_out
);

//Opcodes
parameter NOP = 4'd0;
parameter ADD = 4'd1;
parameter SUB = 4'd2;
parameter AND = 4'd3;
parameter OR = 4'd4;
parameter NOT = 4'd5;
parameter XOR = 4'd6;
parameter CLEAR = 4'd7;
parameter MOVE = 4'd8;
parameter LOAD = 4'd9;
parameter STORE = 4'd10;
parameter PRINT = 4'd11;
parameter PRINT7SEG = 4'd12;
parameter JMP = 4'd13;

//Registradores
parameter [7:0] ACC = 'd0;
parameter [7:0] REGA = 'd1;
parameter [7:0] REGB = 'd2;
parameter [7:0] REGC = 'd3;
parameter [7:0] MADDR = 'd4;
parameter [7:0] ZERO = 'd15;

reg [7:0] regfile[15:0];

always @(posedge clk or posedge rst)
begin
	regfile[ZERO] <= 'd0;
	if(rst)
	begin
		regfile[ACC] <= 'd0;
		regfile[REGA] <= 'd0;
		regfile[REGB] <= 'd0;
		regfile[REGC] <= 'd0;
		regfile[MADDR] <= 'd0;
	end
	else
	begin
		case(opcode)
			ACC
	end
end

assign reg_out = regfile[addr_reg];

endmodule